cctv.sqlparse.all$DATE <- format(cctv.sqlparse.all$SNAP_TIME,"%y-%m-%d")
bp <- ggplot(cctv.sqlparse.all, aes(x=strptime(cctv.sqlparse.all$TIME,"%H:%M:%S"),y=VALUE_DELTA,fill=APP_NAME)) + geom_area() + scale_fill_manual(values=c("#999999","#E69F00","#56B4E9","#009e73","#F0E442","#0072B2","#D55E00","#CC79A7")) + facet_wrap(~DATE,ncol=1) + theme(axis.text.x = element_text(angle=30,hjust=1)) + xlab("Snap Time, step: 10 minutes") + ylab("SQL Parse") + ggtitle("SQL Parse of Applications")
bp
cctv.sqlhardparse.all$DATE <- format(cctv.sqlhardparse.all$SNAP_TIME,"%y-%m-%d")
cctv.sqlhardparse.all$TIME <- format(cctv.sqlhardparse.all$SNAP_TIME,"%H:%M:%S")
bp <- ggplot(cctv.sqlhardparse.all, aes(x=strptime(cctv.sqlhardparse.all$TIME,"%H:%M:%S"),y=VALUE_DELTA,fill=APP_NAME)) + geom_area() + scale_fill_manual(values=c("#999999","#E69F00","#56B4E9","#009e73","#F0E442","#0072B2","#D55E00","#CC79A7")) + facet_wrap(~DATE,ncol=1) + theme(axis.text.x = element_text(angle=30,hjust=1)) + xlab("Snap Time, step: 10 minutes") + ylab("SQL Hard Parse") + ggtitle("SQL Hard Parse of Applications")
bp
cctv.cpu.all$DATE <- format(cctv.cpu.all$SNAP_TIME, "%y-%m-%d)"
)
cctv.cpu.all$DATE <- format(cctv.cpu.all$SNAP_TIME, "%y-%m-%d")
cctv.cpu.all$TIME <- format(cctv.cpu.all$SNAP_TIME, "%H:%M:%S")
str(cctv.cpu.all)
bp <- ggplot(cctv.cpu.all, aes(x=strptime(cctv.cpu.all$TIME,"%H:%M:%S"),y=VALUE_DELTA,fill=APP_NAME)) + geom_area() + scale_fill_manual(values=c("#999999","#E69F00","#56B4E9","#009e73","#F0E442","#0072B2","#D55E00","#CC79A7")) + facet_wrap(~DATE,ncol=1) + theme(axis.text.x = element_text(angle=30,hjust=1)) + xlab("Snap Time, step: 10 minutes") + ylab("CPU Usage") + ggtitle("CPU Usage of Applications")
bp
cctv.cpu.all[which(max(cctv.cpu.all$VALUE_DELTA)),]
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA == max(cctv.cpu.all$VALUE_DELTA)),]
bp <- ggplot(cctv.sqlhardparse.all, aes(x=strptime(cctv.sqlhardparse.all$TIME,"%H:%M:%S"),y=VALUE_DELTA,fill=APP_NAME)) + geom_area() + scale_fill_manual(values=c("#999999","#E69F00","#56B4E9","#009e73","#F0E442","#0072B2","#D55E00","#CC79A7")) + facet_wrap(~DATE,ncol=1) + theme(axis.text.x = element_text(angle=30,hjust=1)) + xlab("Snap Time, step: 10 minutes") + ylab("SQL Hard Parse") + ggtitle("SQL Hard Parse of Applications")
bp
cctv.phyread.all$TIME <- format(cctv.phyread.all$SNAP_TIME, "%H:%M:%S")
cctv.phyread.all$DATE <- format(cctv.phyread.all$SNAP_TIME, "%y-%m-%d")
str(cctv.phyread.all)
bp <- ggplot(cctv.phyread.all, aes(x=strptime(cctv.phyread.all$TIME,"%H:%M:%S"),y=VALUE_DELTA,fill=APP_NAME)) + geom_area() + scale_fill_manual(values=c("#999999","#E69F00","#56B4E9","#009e73","#F0E442","#0072B2","#D55E00","#CC79A7")) + facet_wrap(~DATE,ncol=1) + theme(axis.text.x = element_text(angle=30,hjust=1)) + xlab("Snap Time, step: 10 minutes") + ylab("Physical Read") + ggtitle("Physical Reads of Applications")
bp
str(cctv.dbtime.all)
names(cctv.dbtime.all)
names(cctv.dbtime.all)[1]
class(names(cctv.dbtime.all)[1])
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(cctv.redo.all)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
datasets
str(datasets)
str(datasets)
str(datasets)
str(datasets)
shiny::runApp()
?strptime
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(xtime)
shiny::runApp()
xtime = strptime(datasets$TIME,"%H:%M:%S")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(xtime)
str(xtime)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
boxplot.stats(subset(cctv.cpu.all,APP_NAME="DataSouInterface")$VALUE_DELTA)$out)
boxplot.stats(subset(cctv.cpu.all,APP_NAME="DataSouInterface")$VALUE_DELTA)$out
boxplot.stats(subset(cctv.cpu.all,APP_NAME=="DataSouInterface")$VALUE_DELTA)$out
subset(cctv.cpu.all,APP_NAME=="DataSouInterface")
outliers <- which(subset(cctv.cpu.all,APP_NAME=="DataSouInterface")$VALUE_DELTA %in% boxplot.stats(subset(cctv.cpu.all,APP_NAME=="DataSouInterface")$VALUE_DELTA)$out)
str(outliers)
shiny::runApp()
subset(cctv.cpu.all,APP_NAME=="DataSouInterface")[outliers,c("APP_NAME","SNAP_TIME","VALUE_DELTA")]
str(subset(cctv.cpu.all,APP_NAME=="DataSouInterface"))
head(subset(cctv.cpu.all,APP_NAME=="DataSouInterface"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
s <- sort(cctv.cpu.all$VALUE_DELTA)
summary(s)
?sort
sort(cctv.cpu.all)
sort(cctv.cpu.all$VALUE_DELTA)
sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)
shiny::runApp()
shiny::runApp()
sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1:5]
which(cctv.cpu.all$VALUE_DELTA == (sort(cctv.cpu.all$VALUE_DELTA,decreasing=TRUE))[1:5])
which(cctv.cpu.all$VALUE_DELTA == ((sort(cctv.cpu.all$VALUE_DELTA,decreasing=TRUE))[1:5])
)
which(cctv.cpu.all$VALUE_DELTA == 3777823)
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA == 3777823),]
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA == c(3777823 3074978 2838720 2543073 2447828),]
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA == c(3777823,3074978,2838720,2543073,2447828),]
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA == c(3777823,3074978,2838720,2543073,2447828)),]
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA[c(
3777823,3074978,2838720,2543073,2447828)),]
cctv.cpu.all[c(3777823,3074978,2838720,2543073,2447828),]
cctv.cpu.all[which(cctv.cpu.all$VALUE_DELTA == 3777823),]
sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1:5]
which(sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1:5])
which(cctv.cpu.all$VALUE_DELTA == sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1:5])
which(cctv.cpu.all$VALUE_DELTA == (sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1:5]))
which(cctv.cpu.all$VALUE_DELTA == sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)))
which(cctv.cpu.all$VALUE_DELTA == sort(cctv.cpu.all$VALUE_DELTA,decreasing=T))
sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)
sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1]
which(cctv.cpu.all$VALUE_DELTA == sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[1])
which(cctv.cpu.all$VALUE_DELTA == sort(cctv.cpu.all$VALUE_DELTA,decreasing=T)[2])
quantile(cctv.cpu.all$VALUE_DELTA)
summary(cctv.cpu.all$VALUE_DELTA)
dsisubset <- subset(cctv.cpu.all,APP_NAME=="DataSouInterface")
summary(dsisubset)
str(dissubset)
str(dsisubset)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
cctv.cpu.all["BBoardBridge",]
cctv.cpu.all[c("BBoardBridge"),]
dsisubset <- subset(cctv.cpu.all,APP_NAME=="BBoardBridge")
summary(dsisubset)
levels(cctv.cpu.all$APP_NAME)
str(cctv.cpu.all$APP_NAME)
summary(cctv.cpu.all$APP_NAME)
levels(as.factor(cctv.cpu.all$APP_NAME))
str(cctv.dbtime.all)
nrows()
rows
rownames
rownames(cctv.cpu.all$APP_NAME)
rownames(cctv.cpu.all)
duplicate
shiny::runApp()
str(subset(cctv.cpu.all,APP_NAME=="MigScheduler"))
str(subset(cctv.cpu.all,APP_NAME=="DataSouInterface"))
str(subset(cctv.cpu.all,APP_NAME=="DataSourceApp"))
str(subset(cctv.cpu.all,APP_NAME=="NewsFiveBridge"))
str(subset(cctv.cpu.all,APP_NAME=="FourBridge"))
str(subset(cctv.cpu.all,APP_NAME=="NormalBridge"))
shiny::runApp()
str(subset(cctv.cpu.all,APP_NAME=="ConvertBridge"))
cctv.cpu.all.sub <- subset(cctv.cpu.all, APP_NAME != "ConvertBridge")
str(cctv.cpu.all.sub)
objects()
str(BBoardBridge.cpu)
BBoardBridge.cpu$DATE <- format(BBoardBridge.cpu$SNAP_TIME, "%Y-%M-%D")
str(BBoardBridge.cpu)
BBoardBridge.cpu$DATE <- format(BBoardBridge.cpu$SNAP_TIME, "%y-%m-%d")
str(BBoardBridge.cpu)
BBoardBridge.cpu$TIME <- format(BBoardBridge.cpu$SNAP_TIME, "%H:%M:%S")
str(BBoardBridge.cpu)
cctv.cpu.all <- rbind(cctv.cpu.all.sub, BBoardBridge.cpu)
str(cctv.cpu.all)
str(cctv.cpu.all.sub)
str(ConvertBridge.cpu)
ConvertBridge.cpu$TIME <- format(ConvertBridge.cpu$SNAP_TIME, "%H:%M:%S")
ConvertBridge.cpu$DATE <- format(ConvertBridge.cpu$SNAP_TIME, "%y-%m-%d")
cctv.cpu.all <- rbind(cctv.cpu.all, ConvertBridge.cpu)
str(cctv.cpu.all)
shiny::runApp()
str(cctv.cpu.all)
str(subset(cctv.cpu.all, APP_NAME == "BBoardBridge"))
str(cctv.cpu.all.sub)
cctv.cpu.all.sub <- rbind(cctv.cpu.all.sub, BBoardBridge.cpu)
cctv.cpu.all.sub <- rbind(cctv.cpu.all.sub, ConvertBridge.cpu)
str(cctv.cpu.all.sub)
str(subset(cctv.cpu.all.sub, APP_NAME == "BBoardBridge"))
str(BBoardBridge.cpu)
str(ConvertBridge.cpu)
ssss <- rbind(BBoardBridge.cpu, ConvertBridge.cpu)
str(ssss)
summary(ssss)
summary(BBoardBridge)
summary(BBoardBridge.cpu)
objects()
summary(cctv.dbtime.all)
shiny::runApp()
cctv.cpu.BBoardBridge <- read.xlsx("../cctv/0522/BBoardBridge.raw.xlsx", sheetINdex=1)
cctv.cpu.BBoardBridge <- read.xlsx("../cctv/0522/BBoardBridge.new.cpu.xlsx", sheetINdex=1)
cctv.cpu.BBoardBridge <- read.xlsx("../cctv/0522/BBoardBridge.new.cpu.xlsx", sheetINdex=1)
cctv.cpu.BBoardBridge <- read.xlsx("../cctv/0522/BBoardBridge.new.cpu.xlsx", sheetIndex=1)
cctv.cpu.BBoardBridge$APP_NAME <- c("BBoardBridge")
str(cctv.cpu.BBoardBridge)
cctv.cpu.BBoardBridge$DATE <- formate(cctv.cpu.BBoardBridge$SNAP_TIME, "%y-%m-%d")
cctv.cpu.BBoardBridge$DATE <- format(cctv.cpu.BBoardBridge$SNAP_TIME, "%y-%m-%d")
cctv.cpu.BBoardBridge$TIME <- format(cctv.cpu.BBoardBridge$SNAP_TIME, "%H:%M:%S")
str(cctv.cpu.all.subset)
str(cctv.cpu.all.sub)
cctv.cpu.all.sub1 <- subset(cctv.cpu.all.sub, APP_NAME != "ConvertBridge")
str(cctv.cpu.all.sub1)
summary(cctv.cpu.all.sub1)
which(cctv.cpu.all.sub1$APP_NAME = "ConverBridge")
which(cctv.cpu.all.sub1$APP_NAME == "ConverBridge")
cctv.cpu.all.sub1 < rbind(cctv.cpu.all.sub1, cctv.cpu.BBoardBridge)
str(cctv.cpu.BBoardBridge)
str(cctv.cpu.all)
str(cctv.cpu.all.sub1)
cctv.cpu.all.sub1 <- rbind(cctv.cpu.all.sub1, cctv.cpu.BBoardBridge)
objects()
str(ConverBridge.cpu)
str(ConvertBridge.cpu)
cctv.cpu.all.sub1 <- rbind(cctv.cpu.all.sub1, ConvertBridge.cpu)
str(cctv.cpu.all.sub1)
which(cctv.cpu.all.sub1$APP_NAME == "ConvertBridge")
nums(which(cctv.cpu.all.sub1$APP_NAME == "ConvertBridge"))
num(which(cctv.cpu.all.sub1$APP_NAME == "ConvertBridge"))
nums(which(cctv.cpu.all.sub1$APP_NAME == "BBoardBridge"))
which(cctv.cpu.all.sub1$APP_NAME == "BBoardBridge")
cctv.cpu.all <- cctv.cpu.all.sub1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
objects()
cctv.cpu.l.raw <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 1)
library(xlsx)
cctv.cpu.l.raw <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 1)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw$APP_NAME <- c("BBoardBridge")
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 2)
str(cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp$APP_NAME <- c("ConvertBridge")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 3)
str(cctv.cpu.1.raw.temp)
str(cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp$APP_NAME <- c("DataSouInterface")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 4)
str(cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp$APP_NAME <- c("DataSourceApp")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
str(cctv.cpu.l.raw)
summary(cctv.cpu.l.raw)
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 5)
str(cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp$APP_NAME <- c("FourBridge")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 6)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw.temp$APP_NAME <- c("MigScheduler")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 7)
str(cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp$APP_NAME <- c("NewsFiveBridge")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
cctv.cpu.l.raw.temp <- read.xlsx("../cctv/0526/cpu.raw.l.xlsx",sheetIndex = 8)
cctv.cpu.l.raw.temp$APP_NAME <- c("NormalBridge")
cctv.cpu.l.raw <- rbind(cctv.cpu.l.raw, cctv.cpu.l.raw.temp)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw$APP_NAME <- factor(cctv.cpu.l.raw$APP_NAME)
str(cctv.cpu.l.raw)
cctv.cpu.l.raw$DATE <- format(cctv.cpu.l.raw$SNAP_TIME,"%y-%m-%d")
cctv.cpu.l.raw$TIME <- format(cctv.cpu.l.raw$SNAP_TIME,"%H:%M:%S")
str(cctv.cpu.l.raw)
dataprune <- function(x){
n <- 0
n <- 1
read.xlsx("../cctv/0526/dbtime.raw.l.xlsx", sheetIndex=x)
dataprune <- function(x){
data.temp <- read.xlsx("../cctv/0526/dbtime.raw.l.xlsx", sheetIndex=x)
dataprune <- function(filename, sheetindex, appname){
data.temp <- read.xlsx(filename, sheetIndex = sheetindex)
data.temp$APP_NAME = appname
data.temp$DATE <- format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME <- format(data.temp$SNAP_TIME, "%H:%M:%S")
}
dbtime.raw.l <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 1, "BBoardBridge")
str(dbtime.raw.l)
dataprune <- function(filename, sheetindex, appname){
data.temp <- read.xlsx(filename, sheetIndex = sheetindex)
data.temp$APP_NAME = appname
data.temp$DATE <- format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME <- format(data.temp$SNAP_TIME, "%H:%M:%S")
return data.temp
dataprune <- function(filename, sheetindex, appname){
data.temp <- read.xlsx(filename, sheetIndex = sheetindex)
data.temp$APP_NAME = appname
data.temp$DATE <- format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME <- format(data.temp$SNAP_TIME, "%H:%M:%S")
return(data.temp)
}
data.temp <- read.xlsx(filename, sheetIndex = sheetindex)
dbtime.raw.l <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 1, "BBoardBridge")
str(dbtime.raw.1)
str(dbtime.raw.l)
dbtime.raw.l.temp <- dataprune("../cctv/0626/dbtime.raw.l.xlsx", 2, "ConvertBridge")
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 2, "ConvertBridge")
str(dbtime.raw.1.temp)
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 3, "DataSouInterface")
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
str(dbtime.raw.l)
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 4, "DataSourceApp")
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 5, "FourBridge")
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 6, "MigScheduler")
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
str(dbtime.raw.l)
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 7, "NewsFiveBridge")
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
str(dbtime.raw.l)
dbtime.raw.l.temp <- dataprune("../cctv/0526/dbtime.raw.l.xlsx", 8, "NormalBridge")
str(dbtime.raw.l.temp)
dbtime.raw.l <- rbind(dbtime.raw.l, dbtime.raw.l.temp)
str(dbtime.raw.l)
str(cpu.raw.l)
str(cpu.raw.l)
objects()
str(cctv.cpu.raw.l)
str(cctv.cpu.l.raw)
str(dbtime.raw.l)
cctv.dbtime.l.raw <- dbtime.raw.l
str(cctv.dbtime.l.raw)
edit
edit(dataprune)
appname <- c("ddd", "dddd", "iii")
appname[1]
edit(dataprune)
data.result <- df(x,y)
edit(dataprune)
edit(dataprune)
data.result <- df(NA,NA)
data.result <- data.frame("APP_NAME","SNAP_TIME")
data.result
names <- "APP_NAME"
times <- "SNAP_TIME"
data.result <- data.frame(names,time)
data.result <- data.frame(names,times)
data.result
data.result$names
times <- NA
names <- NA
data.result <- data.frame(names,times)
data.result
data.result$names
data.result <- rbind(data.result, c("dd","dd"))
data.result
data.result <- rbind(data.result, c("dd","dd"), rm.na=T)
data.result
data.result <- data.frame()
data.result
data.result <- rbind(data.result, c("dd","dd"))
data.result
data.result <- data.frame()
data.result <- rbind(data.result, cpu.raw.l)
data.result <- rbind(data.result, cctv.cpu.raw.l)
data.result <- rbind(data.result, cctv.cpu.l.raw)
str(data.result)
edit(dataprune)
dataprune <- function(filename){
data.temp <- read.xlsx(filename, sheetIndex = sheetindex)
data.temp$APP_NAME = appname
data.temp$DATE <- format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME <- format(data.temp$SNAP_TIME, "%H:%M:%S")
return(data.temp)
}
dataprune <- function(filename){
sheetindex = 1
appname <- c("BBoardBridge","ConvertBridge","DataSouInterface","DataSourceApp","FourBridge","MigScheduler","NewsFiveBridge","NormalBridge")
data.result <- data.frame()
for(sheetindex in 1:length(appname))
{
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
}
return(data.result)
}
dataprune("../cctv/0526/hardparse.raw.l.xlsx")
str(data.result)
str(cctv.cpu.l)
str(cctv.cpu.raw.l)
str(cctv.cpu.l.raw)
dataprune <- function(filename){
sheetindex = 1
for(sheetindex in 1:length(appname))
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
str(data.result)
}
return(data.result)
dataprune <- function(filename){
sheetindex = 1
for(sheetindex in 1:length(appname))
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
dataprune <- function(filename){
sheetindex = 1
for(sheetindex in 1:length(appname))
{
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
str(data.result)
}
return(data.result)
}
dataprune("../cctv/0526/hardparse.raw.l.xlsx")
edit(dataprune)
edit(dataprune)
dataprune <- function(filename){
sheetindex = 1
data.result <- data.frame()
data.temp <- data.frame()
appname <- c("BBoardBridge","ConvertBridge","DataSouInterface","DataSourceApp","FourBridge","MigScheduler","NewsFiveBridge","NormalBridge")
for(sheetindex in 1:length(appname))
{
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
str(data.result)
}
return(data.result)
}
dataprune("../cctv/0526/hardparse.raw.l.xlsx")
str(data.result)
dataprune("../cctv/0526/hardparse.raw.l.xlsx")
str(data.result)
head(data.result)
edit(dataprune)
edit(dataprune)
data.result <- dataprune("../cctv0526/hardparse.raw.l.xlsx")
data.result <- dataprune("../cctv/0526/hardparse.raw.l.xlsx")
str(data.result)
edit(dataprune)
function(filename){
sheetindex = 1
data.result <- data.frame()
data.temp <- data.frame()
appname <- c("BBoardBridge","ConvertBridge","DataSouInterface","DataSourceApp","FourBridge","MigScheduler","NewsFiveBridge","NormalBridge")
for(sheetindex in 1:length(appname))
{
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
tail(data.result)
}
return(data.result)
}
dataprune <- function(filename){
sheetindex = 1
data.result <- data.frame()
data.temp <- data.frame()
appname <- c("BBoardBridge","ConvertBridge","DataSouInterface","DataSourceApp","FourBridge","MigScheduler","NewsFiveBridge","NormalBridge")
for(sheetindex in 1:length(appname))
{
data.temp <- read.xlsx(filename, sheetIndex=sheetindex)
data.temp$APP_NAME = appname[sheetindex]
data.temp$DATE = format(data.temp$SNAP_TIME, "%y-%m-%d")
data.temp$TIME = format(data.temp$SNAP_TIME, "%H:%M:%S")
data.result <- rbind(data.result, data.temp)
tail(data.result)
}
return(data.result)
}
data.result <- dataprune("../cctv/0526/hardparse.raw.l.xlsx")
data.result <- dataprune("../cctv/0526/hardparse.raw.l.xlsx")
